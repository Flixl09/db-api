
inspired from https://restdb.io/docs/rest-api#quickXexample

http://127.0.0.1:8980/rest

# GET - read all items from a collection with rest api
```
    curl -i -H "Accept: application/json"\
     -H "Content-Type: application/json"\
     -H "x-apikey: 560bd47058e7ab1b2648f4e7"\
     -X GET "http://127.0.0.1:8980/rest/product"
```
output
```
    [
        {
            "_id": "5602647c7f98025500000041",
            "description": "Saepe adipisci illo restful dignissimos. Dicta generate occaecati ex ducimus.",
            "name": "Quaerat consectetur",
            "photos": [
                "55a68f6fc53a0b2a00000006"
            ],
            "serialno": "16177"
        },
        {
            "_id": "5602647c7f9802550000003c",
            "description": "Harum voluptas vitae restful consequatur with rest api.",
            "name": "Ratione iste recusandae",
            "photos": [
                "55a68f6fc53a0bbc00000009"
            ],
            "serialno": "23588"
        }
    ]
```

# GET - read one item from a collection 
```
    curl -i -H "Accept: application/json"\
     -H "Content-Type: application/json"\
     -H "x-apikey: 560bd47058e7ab1b2648f4e7"\
     -X GET 'http://127.0.0.1:8980/rest/product/5602647c7f98025500000041'
```

----

SQL, (mysql/mariadb)
```
CREATE DATABASE IF NOT EXISTS restdb;
USE restdb;

CREATE TABLE product (
_id INT(6) UNSIGNED PRIMARY KEY,
name VARCHAR(50) NOT NULL,
description VARCHAR(100),
photos VARCHAR(100),
serialno VARCHAR(50),
reg_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
) 
```


https://github.com/o1lab/xmysql

GET
/api/tableName/:id Retrieves a row by primary key


---

https://medium.com/swlh/coding-a-rest-api-with-python-77384ad60511
https://medium.com/daily-python/building-a-simple-rest-api-using-python-flask-daily-python-14-488d63701bd2
https://medium.com/@sametgirgin/rest-api-crud-example-in-python-using-flask-and-mysql-8eea922d533e


